// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		E14397C2179D1B0000AB6AC3 /* SenTestingKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E14397C1179D1B0000AB6AC3 /* SenTestingKit.framework */; };
		E14397C4179D1B0000AB6AC3 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E14397C3179D1B0000AB6AC3 /* UIKit.framework */; };
		E14397C6179D1B0000AB6AC3 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E14397C5179D1B0000AB6AC3 /* Foundation.framework */; };
		E14397CC179D1B0000AB6AC3 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = E14397CA179D1B0000AB6AC3 /* InfoPlist.strings */; };
		E14397CF179D1B0000AB6AC3 /* NLogLogicTests.m in Sources */ = {isa = PBXBuildFile; fileRef = E14397CE179D1B0000AB6AC3 /* NLogLogicTests.m */; };
		E14397D5179D21DA00AB6AC3 /* nlog.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E14397D4179D21DA00AB6AC3 /* nlog.framework */; };
		E14397D7179D267F00AB6AC3 /* libz.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = E14397D6179D267F00AB6AC3 /* libz.dylib */; };
		E14397D9179D269C00AB6AC3 /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E14397D8179D269C00AB6AC3 /* SystemConfiguration.framework */; };
		E14397DD17A13FBC00AB6AC3 /* OpenUDID.h in Headers */ = {isa = PBXBuildFile; fileRef = E14397DB17A13FBC00AB6AC3 /* OpenUDID.h */; };
		E14397DE17A13FBC00AB6AC3 /* OpenUDID.m in Sources */ = {isa = PBXBuildFile; fileRef = E14397DC17A13FBC00AB6AC3 /* OpenUDID.m */; };
		E1DA06821795161C00C306B3 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = E1DA06801795161C00C306B3 /* InfoPlist.strings */; };
		E1DA06991795167D00C306B3 /* NLog.h in Headers */ = {isa = PBXBuildFile; fileRef = E1DA06891795167D00C306B3 /* NLog.h */; settings = {ATTRIBUTES = (Public, ); }; };
		E1DA069A1795167D00C306B3 /* NLog.m in Sources */ = {isa = PBXBuildFile; fileRef = E1DA068A1795167D00C306B3 /* NLog.m */; };
		E1DA069C1795167D00C306B3 /* NLogConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = E1DA068C1795167D00C306B3 /* NLogConfig.m */; };
		E1DA069D1795167D00C306B3 /* NReachability.h in Headers */ = {isa = PBXBuildFile; fileRef = E1DA068D1795167D00C306B3 /* NReachability.h */; };
		E1DA069E1795167D00C306B3 /* NReachability.m in Sources */ = {isa = PBXBuildFile; fileRef = E1DA068E1795167D00C306B3 /* NReachability.m */; };
		E1DA069F1795167D00C306B3 /* NSender.h in Headers */ = {isa = PBXBuildFile; fileRef = E1DA068F1795167D00C306B3 /* NSender.h */; settings = {ATTRIBUTES = (); }; };
		E1DA06A01795167D00C306B3 /* NSender.m in Sources */ = {isa = PBXBuildFile; fileRef = E1DA06901795167D00C306B3 /* NSender.m */; };
		E1DA06A11795167D00C306B3 /* NSession.h in Headers */ = {isa = PBXBuildFile; fileRef = E1DA06911795167D00C306B3 /* NSession.h */; settings = {ATTRIBUTES = (); }; };
		E1DA06A21795167D00C306B3 /* NSession.m in Sources */ = {isa = PBXBuildFile; fileRef = E1DA06921795167D00C306B3 /* NSession.m */; };
		E1DA06A31795167D00C306B3 /* NStorage.h in Headers */ = {isa = PBXBuildFile; fileRef = E1DA06931795167D00C306B3 /* NStorage.h */; settings = {ATTRIBUTES = (); }; };
		E1DA06A41795167D00C306B3 /* NStorage.m in Sources */ = {isa = PBXBuildFile; fileRef = E1DA06941795167D00C306B3 /* NStorage.m */; };
		E1DA06A51795167D00C306B3 /* NStringExtension.h in Headers */ = {isa = PBXBuildFile; fileRef = E1DA06951795167D00C306B3 /* NStringExtension.h */; settings = {ATTRIBUTES = (); }; };
		E1DA06A61795167D00C306B3 /* NStringExtension.m in Sources */ = {isa = PBXBuildFile; fileRef = E1DA06961795167D00C306B3 /* NStringExtension.m */; };
		E1DA06A71795167D00C306B3 /* NTracker.h in Headers */ = {isa = PBXBuildFile; fileRef = E1DA06971795167D00C306B3 /* NTracker.h */; settings = {ATTRIBUTES = (Public, ); }; };
		E1DA06A81795167D00C306B3 /* NTracker.m in Sources */ = {isa = PBXBuildFile; fileRef = E1DA06981795167D00C306B3 /* NTracker.m */; };
		E1DA06AC179516B400C306B3 /* JSONKit.h in Headers */ = {isa = PBXBuildFile; fileRef = E1DA06AA179516B400C306B3 /* JSONKit.h */; settings = {ATTRIBUTES = (Public, ); }; };
		E1DA06AD179516B400C306B3 /* JSONKit.m in Sources */ = {isa = PBXBuildFile; fileRef = E1DA06AB179516B400C306B3 /* JSONKit.m */; };
		E1DA06AF179517DE00C306B3 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E1DA06AE179517DE00C306B3 /* UIKit.framework */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		E14397BF179D1B0000AB6AC3 /* NLogLogicTests.octest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = NLogLogicTests.octest; sourceTree = BUILT_PRODUCTS_DIR; };
		E14397C1179D1B0000AB6AC3 /* SenTestingKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SenTestingKit.framework; path = Library/Frameworks/SenTestingKit.framework; sourceTree = DEVELOPER_DIR; };
		E14397C3179D1B0000AB6AC3 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = Library/Frameworks/UIKit.framework; sourceTree = DEVELOPER_DIR; };
		E14397C5179D1B0000AB6AC3 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = Library/Frameworks/Foundation.framework; sourceTree = DEVELOPER_DIR; };
		E14397C9179D1B0000AB6AC3 /* NLogLogicTests-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "NLogLogicTests-Info.plist"; sourceTree = "<group>"; };
		E14397CB179D1B0000AB6AC3 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		E14397CD179D1B0000AB6AC3 /* NLogLogicTests.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = NLogLogicTests.h; sourceTree = "<group>"; };
		E14397CE179D1B0000AB6AC3 /* NLogLogicTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = NLogLogicTests.m; sourceTree = "<group>"; };
		E14397D0179D1B0000AB6AC3 /* NLogLogicTests-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "NLogLogicTests-Prefix.pch"; sourceTree = "<group>"; };
		E14397D4179D21DA00AB6AC3 /* nlog.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = nlog.framework; path = "../../../../../../Library/Developer/Xcode/DerivedData/nlog-bediousojgragmacwxzltffkfggn/Build/Products/Release-iphoneos/nlog.framework"; sourceTree = "<group>"; };
		E14397D6179D267F00AB6AC3 /* libz.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libz.dylib; path = usr/lib/libz.dylib; sourceTree = SDKROOT; };
		E14397D8179D269C00AB6AC3 /* SystemConfiguration.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SystemConfiguration.framework; path = System/Library/Frameworks/SystemConfiguration.framework; sourceTree = SDKROOT; };
		E14397DB17A13FBC00AB6AC3 /* OpenUDID.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = OpenUDID.h; sourceTree = "<group>"; };
		E14397DC17A13FBC00AB6AC3 /* OpenUDID.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = OpenUDID.m; sourceTree = "<group>"; };
		E1DA067B1795161C00C306B3 /* nlog.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = nlog.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		E1DA067F1795161C00C306B3 /* nlog-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "nlog-Info.plist"; sourceTree = "<group>"; };
		E1DA06811795161C00C306B3 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		E1DA06831795161C00C306B3 /* nlog-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "nlog-Prefix.pch"; sourceTree = "<group>"; };
		E1DA06891795167D00C306B3 /* NLog.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NLog.h; sourceTree = "<group>"; };
		E1DA068A1795167D00C306B3 /* NLog.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NLog.m; sourceTree = "<group>"; };
		E1DA068B1795167D00C306B3 /* NLogConfig.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NLogConfig.h; sourceTree = "<group>"; };
		E1DA068C1795167D00C306B3 /* NLogConfig.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NLogConfig.m; sourceTree = "<group>"; };
		E1DA068D1795167D00C306B3 /* NReachability.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NReachability.h; sourceTree = "<group>"; };
		E1DA068E1795167D00C306B3 /* NReachability.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NReachability.m; sourceTree = "<group>"; };
		E1DA068F1795167D00C306B3 /* NSender.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NSender.h; sourceTree = "<group>"; };
		E1DA06901795167D00C306B3 /* NSender.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NSender.m; sourceTree = "<group>"; };
		E1DA06911795167D00C306B3 /* NSession.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NSession.h; sourceTree = "<group>"; };
		E1DA06921795167D00C306B3 /* NSession.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NSession.m; sourceTree = "<group>"; };
		E1DA06931795167D00C306B3 /* NStorage.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NStorage.h; sourceTree = "<group>"; };
		E1DA06941795167D00C306B3 /* NStorage.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NStorage.m; sourceTree = "<group>"; };
		E1DA06951795167D00C306B3 /* NStringExtension.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NStringExtension.h; sourceTree = "<group>"; };
		E1DA06961795167D00C306B3 /* NStringExtension.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NStringExtension.m; sourceTree = "<group>"; };
		E1DA06971795167D00C306B3 /* NTracker.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NTracker.h; sourceTree = "<group>"; };
		E1DA06981795167D00C306B3 /* NTracker.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NTracker.m; sourceTree = "<group>"; };
		E1DA06AA179516B400C306B3 /* JSONKit.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = JSONKit.h; sourceTree = "<group>"; };
		E1DA06AB179516B400C306B3 /* JSONKit.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = JSONKit.m; sourceTree = "<group>"; };
		E1DA06AE179517DE00C306B3 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		E14397BB179D1B0000AB6AC3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E14397D9179D269C00AB6AC3 /* SystemConfiguration.framework in Frameworks */,
				E14397D7179D267F00AB6AC3 /* libz.dylib in Frameworks */,
				E14397C2179D1B0000AB6AC3 /* SenTestingKit.framework in Frameworks */,
				E14397C4179D1B0000AB6AC3 /* UIKit.framework in Frameworks */,
				E14397C6179D1B0000AB6AC3 /* Foundation.framework in Frameworks */,
				E14397D5179D21DA00AB6AC3 /* nlog.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E1DA06751795161C00C306B3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E1DA06AF179517DE00C306B3 /* UIKit.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		E14397C0179D1B0000AB6AC3 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				E14397C1179D1B0000AB6AC3 /* SenTestingKit.framework */,
				E14397C3179D1B0000AB6AC3 /* UIKit.framework */,
				E14397C5179D1B0000AB6AC3 /* Foundation.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		E14397C7179D1B0000AB6AC3 /* NLogLogicTests */ = {
			isa = PBXGroup;
			children = (
				E14397CD179D1B0000AB6AC3 /* NLogLogicTests.h */,
				E14397CE179D1B0000AB6AC3 /* NLogLogicTests.m */,
				E14397C8179D1B0000AB6AC3 /* Supporting Files */,
			);
			path = NLogLogicTests;
			sourceTree = "<group>";
		};
		E14397C8179D1B0000AB6AC3 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				E14397C9179D1B0000AB6AC3 /* NLogLogicTests-Info.plist */,
				E14397CA179D1B0000AB6AC3 /* InfoPlist.strings */,
				E14397D0179D1B0000AB6AC3 /* NLogLogicTests-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		E14397DA17A13FA300AB6AC3 /* OpenUDID */ = {
			isa = PBXGroup;
			children = (
				E14397DB17A13FBC00AB6AC3 /* OpenUDID.h */,
				E14397DC17A13FBC00AB6AC3 /* OpenUDID.m */,
			);
			name = OpenUDID;
			sourceTree = "<group>";
		};
		E1DA066E1795161C00C306B3 = {
			isa = PBXGroup;
			children = (
				E14397DA17A13FA300AB6AC3 /* OpenUDID */,
				E14397D8179D269C00AB6AC3 /* SystemConfiguration.framework */,
				E14397D6179D267F00AB6AC3 /* libz.dylib */,
				E1DA06891795167D00C306B3 /* NLog.h */,
				E1DA068A1795167D00C306B3 /* NLog.m */,
				E1DA068B1795167D00C306B3 /* NLogConfig.h */,
				E1DA068C1795167D00C306B3 /* NLogConfig.m */,
				E1DA068D1795167D00C306B3 /* NReachability.h */,
				E1DA068E1795167D00C306B3 /* NReachability.m */,
				E1DA068F1795167D00C306B3 /* NSender.h */,
				E1DA06901795167D00C306B3 /* NSender.m */,
				E1DA06911795167D00C306B3 /* NSession.h */,
				E1DA06921795167D00C306B3 /* NSession.m */,
				E1DA06931795167D00C306B3 /* NStorage.h */,
				E1DA06941795167D00C306B3 /* NStorage.m */,
				E1DA06951795167D00C306B3 /* NStringExtension.h */,
				E1DA06961795167D00C306B3 /* NStringExtension.m */,
				E1DA06971795167D00C306B3 /* NTracker.h */,
				E1DA06981795167D00C306B3 /* NTracker.m */,
				E1DA06AE179517DE00C306B3 /* UIKit.framework */,
				E1DA06A91795168600C306B3 /* JSONKit */,
				E1DA067D1795161C00C306B3 /* nlog */,
				E14397C7179D1B0000AB6AC3 /* NLogLogicTests */,
				E14397C0179D1B0000AB6AC3 /* Frameworks */,
				E1DA067C1795161C00C306B3 /* Products */,
				E14397D4179D21DA00AB6AC3 /* nlog.framework */,
			);
			sourceTree = "<group>";
		};
		E1DA067C1795161C00C306B3 /* Products */ = {
			isa = PBXGroup;
			children = (
				E1DA067B1795161C00C306B3 /* nlog.framework */,
				E14397BF179D1B0000AB6AC3 /* NLogLogicTests.octest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		E1DA067D1795161C00C306B3 /* nlog */ = {
			isa = PBXGroup;
			children = (
				E1DA067E1795161C00C306B3 /* Supporting Files */,
			);
			path = nlog;
			sourceTree = "<group>";
		};
		E1DA067E1795161C00C306B3 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				E1DA067F1795161C00C306B3 /* nlog-Info.plist */,
				E1DA06801795161C00C306B3 /* InfoPlist.strings */,
				E1DA06831795161C00C306B3 /* nlog-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		E1DA06A91795168600C306B3 /* JSONKit */ = {
			isa = PBXGroup;
			children = (
				E1DA06AA179516B400C306B3 /* JSONKit.h */,
				E1DA06AB179516B400C306B3 /* JSONKit.m */,
			);
			name = JSONKit;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		E1DA06761795161C00C306B3 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E1DA06991795167D00C306B3 /* NLog.h in Headers */,
				E1DA06A71795167D00C306B3 /* NTracker.h in Headers */,
				E1DA06AC179516B400C306B3 /* JSONKit.h in Headers */,
				E1DA06A51795167D00C306B3 /* NStringExtension.h in Headers */,
				E1DA069F1795167D00C306B3 /* NSender.h in Headers */,
				E1DA06A11795167D00C306B3 /* NSession.h in Headers */,
				E1DA06A31795167D00C306B3 /* NStorage.h in Headers */,
				E1DA069D1795167D00C306B3 /* NReachability.h in Headers */,
				E14397DD17A13FBC00AB6AC3 /* OpenUDID.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		E14397BE179D1B0000AB6AC3 /* NLogLogicTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E14397D1179D1B0000AB6AC3 /* Build configuration list for PBXNativeTarget "NLogLogicTests" */;
			buildPhases = (
				E14397BA179D1B0000AB6AC3 /* Sources */,
				E14397BB179D1B0000AB6AC3 /* Frameworks */,
				E14397BC179D1B0000AB6AC3 /* Resources */,
				E14397BD179D1B0000AB6AC3 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = NLogLogicTests;
			productName = NLogLogicTests;
			productReference = E14397BF179D1B0000AB6AC3 /* NLogLogicTests.octest */;
			productType = "com.apple.product-type.bundle";
		};
		E1DA067A1795161C00C306B3 /* nlog */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E1DA06861795161C00C306B3 /* Build configuration list for PBXNativeTarget "nlog" */;
			buildPhases = (
				E1DA06731795161C00C306B3 /* ShellScript */,
				E1DA06741795161C00C306B3 /* Sources */,
				E1DA06751795161C00C306B3 /* Frameworks */,
				E1DA06761795161C00C306B3 /* Headers */,
				E1DA06771795161C00C306B3 /* Resources */,
				E1DA06781795161C00C306B3 /* ShellScript */,
				E1DA06791795161C00C306B3 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = nlog;
			productName = nlog;
			productReference = E1DA067B1795161C00C306B3 /* nlog.framework */;
			productType = "com.apple.product-type.bundle";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		E1DA066F1795161C00C306B3 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0460;
				ORGANIZATIONNAME = baidu;
			};
			buildConfigurationList = E1DA06721795161C00C306B3 /* Build configuration list for PBXProject "nlog" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = E1DA066E1795161C00C306B3;
			productRefGroup = E1DA067C1795161C00C306B3 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				E1DA067A1795161C00C306B3 /* nlog */,
				E14397BE179D1B0000AB6AC3 /* NLogLogicTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		E14397BC179D1B0000AB6AC3 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E14397CC179D1B0000AB6AC3 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E1DA06771795161C00C306B3 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E1DA06821795161C00C306B3 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		E14397BD179D1B0000AB6AC3 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Run the unit tests in this test bundle.\n\"${SYSTEM_DEVELOPER_DIR}/Tools/RunUnitTests\"\n";
		};
		E1DA06731795161C00C306B3 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n   [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n";
		};
		E1DA06781795161C00C306B3 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		E1DA06791795161C00C306B3 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\n\n# Make sure the other platform gets built\n\necho \"Build other platform\"\n\necho xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\nxcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n\n\n# Build the fat static library binary\n\necho \"Create universal static library\"\n\nif [[ \"$XCODE_VERSION_MAJOR\" = \"0500\" ]]\nthen\n    echo \"$DT_TOOLCHAIN_DIR/usr/bin/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$DT_TOOLCHAIN_DIR/usr/bin/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\nelse\n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\nfi \n\necho mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nmv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n\n\n# Build framework structure\n\necho \"Build symlinks\"\n\necho ln -sfh $FRAMEWORK_VERSION \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Versions/Current\"\nln -sfh $FRAMEWORK_VERSION \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Versions/Current\"\necho ln -sfh Versions/Current/Headers \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Headers\"\nln -sfh Versions/Current/Headers \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Headers\"\necho ln -sfh Versions/Current/Resources \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Resources\"\nln -sfh Versions/Current/Resources \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Resources\"\necho ln -sfh \"Versions/Current/${EXECUTABLE_NAME}\" \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/${EXECUTABLE_NAME}\"\nln -sfh \"Versions/Current/${EXECUTABLE_NAME}\" \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/${EXECUTABLE_NAME}\"\n\n\n# Link to binary for unit tests\n\nmkdir -p \"${BUILT_PRODUCTS_DIR}/.fake_fw_testing.framework\"\nln -sfh \"../${WRAPPER_NAME}/${EXECUTABLE_NAME}\" \"${BUILT_PRODUCTS_DIR}/.fake_fw_testing.framework/.fake_fw_testing\"\n\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\n# Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n\necho \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n\necho rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nrm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\necho cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\ncp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		E14397BA179D1B0000AB6AC3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E14397CF179D1B0000AB6AC3 /* NLogLogicTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E1DA06741795161C00C306B3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E1DA069A1795167D00C306B3 /* NLog.m in Sources */,
				E1DA069C1795167D00C306B3 /* NLogConfig.m in Sources */,
				E1DA069E1795167D00C306B3 /* NReachability.m in Sources */,
				E1DA06A01795167D00C306B3 /* NSender.m in Sources */,
				E1DA06A21795167D00C306B3 /* NSession.m in Sources */,
				E1DA06A41795167D00C306B3 /* NStorage.m in Sources */,
				E1DA06A61795167D00C306B3 /* NStringExtension.m in Sources */,
				E1DA06A81795167D00C306B3 /* NTracker.m in Sources */,
				E1DA06AD179516B400C306B3 /* JSONKit.m in Sources */,
				E14397DE17A13FBC00AB6AC3 /* OpenUDID.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		E14397CA179D1B0000AB6AC3 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				E14397CB179D1B0000AB6AC3 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		E1DA06801795161C00C306B3 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				E1DA06811795161C00C306B3 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		E14397D2179D1B0000AB6AC3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(SDKROOT)/Developer/Library/Frameworks\"",
					"\"$(DEVELOPER_LIBRARY_DIR)/Frameworks\"",
					"\"$(SRCROOT)/../../../../../../Library/Developer/Xcode/DerivedData/nlog-bediousojgragmacwxzltffkfggn/Build/Products/Release-iphoneos\"",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "NLogLogicTests/NLogLogicTests-Prefix.pch";
				INFOPLIST_FILE = "NLogLogicTests/NLogLogicTests-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = octest;
			};
			name = Debug;
		};
		E14397D3179D1B0000AB6AC3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(SDKROOT)/Developer/Library/Frameworks\"",
					"\"$(DEVELOPER_LIBRARY_DIR)/Frameworks\"",
					"\"$(SRCROOT)/../../../../../../Library/Developer/Xcode/DerivedData/nlog-bediousojgragmacwxzltffkfggn/Build/Products/Release-iphoneos\"",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "NLogLogicTests/NLogLogicTests-Prefix.pch";
				INFOPLIST_FILE = "NLogLogicTests/NLogLogicTests-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = octest;
			};
			name = Release;
		};
		E1DA06841795161C00C306B3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		E1DA06851795161C00C306B3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		E1DA06871795161C00C306B3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "nlog/nlog-Prefix.pch";
				INFOPLIST_FILE = "nlog/nlog-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				IPHONEOS_DEPLOYMENT_TARGET = 4.3;
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		E1DA06881795161C00C306B3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "nlog/nlog-Prefix.pch";
				INFOPLIST_FILE = "nlog/nlog-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				IPHONEOS_DEPLOYMENT_TARGET = 4.3;
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		E14397D1179D1B0000AB6AC3 /* Build configuration list for PBXNativeTarget "NLogLogicTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E14397D2179D1B0000AB6AC3 /* Debug */,
				E14397D3179D1B0000AB6AC3 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
		};
		E1DA06721795161C00C306B3 /* Build configuration list for PBXProject "nlog" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E1DA06841795161C00C306B3 /* Debug */,
				E1DA06851795161C00C306B3 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		E1DA06861795161C00C306B3 /* Build configuration list for PBXNativeTarget "nlog" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E1DA06871795161C00C306B3 /* Debug */,
				E1DA06881795161C00C306B3 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = E1DA066F1795161C00C306B3 /* Project object */;
}
